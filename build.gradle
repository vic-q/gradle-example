buildscript {

    repositories {
        jcenter()
    }

}

plugins {
    id 'java'
    id 'application'
}

mainClassName = 'App'

group 'com.gradle.example'
version '0.0.1-SNAPSHOT'

repositories {
    jcenter()
}

allprojects {

}

subprojects {

    apply plugin: 'idea'
    apply plugin: 'java'

    group = rootProject.group
    version = rootProject.version
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    sourceSets {
        main {
            resources {
                srcDirs = ["src/main/resources/base"]
            }
        }
    }

    repositories {
        jcenter()
    }

    dependencies {
        compile 'com.google.guava:guava:21.0'
        testCompile 'junit:junit:4.12'
    }

}

project(":example-repository") {

    dependencies {
        compile "org.mybatis:mybatis:3.4.3"
        compile "mysql:mysql-connector-java:5.1.37"
    }
}

configurations {
    mybatisGenerator
}

dependencies {
    //mybatis
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.36'
    mybatisGenerator 'tk.mybatis:mapper:3.3.6'
}

def prop = {
    def properties = new Properties()
    properties.setProperty("jdbc.mysql.url", "jdbc:mysql://localhost:3307/gradle-example?useSSL=false&useUnicode=true&characterEncoding=UTF-8")
    properties.setProperty("jdbc.mysql.user", "root")
    properties.setProperty("jdbc.mysql.pass", "123456")
    properties;
}

task generatorTask << {
    def properties = prop()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = "com.mysql.jdbc.Driver"
    ant.properties['connectionURL'] = properties.getProperty("jdbc.mysql.url")
    ant.properties['userId'] = properties.getProperty("jdbc.mysql.user")
    ant.properties['password'] = properties.getProperty("jdbc.mysql.pass")
    ant.properties['src_main_java'] = project('example-repository').sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = project('example-repository').sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = "com.gradle.example.model"
    ant.properties['mapperPackage'] = "com.gradle.example.mapper"
    ant.properties['sqlMapperPackage'] = "com.gradle.example.mapper"
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true, configfile: 'generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}
